pipeline {
    agent {
    node {
        label 'node_slave'
    }
}
    tools{
        jdk 'openjdk11'
    }
    stages {
        stage('Checkout & Pull Code') {
            steps {
                git branch: 'feature/khanhtm', credentialsId: 'ssh-github', url: 'git@github.com:KryCool/springboot-java-useToJib.git'
            }
        }

        stage('Build'){
            steps{
                script{
                    // Get version number in build.gradle
                    def value = sh(returnStdout: true, script: "cat build.gradle | grep -o 'version = [^,]*'").trim()
                   // sh "echo $value"
                    def version= value.split(/=/)[1]
                    //sh "echo $version"
                    // Set output to env
                    env.PROJECT_VERSION = "$version"

                    // Build Images and Tag version
                    sh "./gradlew -x test jib --images=192.168.1.100:8082/repository/test1/spring-boot:${env.PROJECT_VERSION}.build${env.BUILD_ID} --info"
                    sh "./gradlew -x test jib --images=192.168.1.100:8082/repository/test1/spring-boot:latest.build${env.BUILD_ID}" 
                }
            }
        }
        stage('Push Images to Nexus'){

            steps{
                withCredentials([usernamePassword(credentialsId: 'podman-login', passwordVariable: 'password', usernameVariable: 'username')]) {
                script{
                    sh '''
                    podman -u "$username" -p"$password" 192.168.1.100:8082
                    '''
                    sh "podman push 192.168.1.100:8082/repository/test1/spring-boot:${env.PROJECT_VERSION}.build${env.BUILD_ID}"
                    sh "podman push 192.168.1.100:8082/repository/test1/spring-boot:latest.build${env.BUILD_ID}"
                }
            }
            }

        }
    }
}
